<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Poj6uO8Oa0ZpXUmmrTTd2k3tzXkewmr4f//Z
</value>
  </data>
</root>